@page "/application-users"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DialogService DialogService
@inject ContextMenuService ContextMenuService
@inject TooltipService TooltipService
@inject NotificationService NotificationService
@attribute [Authorize]

<PageTitle>Users</PageTitle>
<div class="row">
    <div class="col-12 d-flex justify-content-between align-items-center" style="margin-bottom: 1rem">
        <RadzenText Text="Users" TextStyle="TextStyle.H3" TagName="TagName.H1" style="margin: 0" />
        <AuthorizeView Roles = "Administrators, Owners">
            <RadzenButton Icon="add_circle_outline" Text="Add" Click="@AddClick" Variant="Variant.Flat" />
        </AuthorizeView>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <RadzenAlert Size="AlertSize.Large" Shade="Shade.Light" AlertStyle="AlertStyle.Danger" Variant="Variant.Flat" Title="Cannot delete user" Visible="@errorVisible">@error</RadzenAlert>
        <RadzenDataGrid @ref="grid0" AllowFiltering="true" AllowPaging="true" AllowSorting="true" Data="@users"
            TItem="EBidderWeb.Server.Models.ApplicationUser" RowSelect="@RowSelect">
            <Columns>
                <RadzenDataGridColumn TItem="EBidderWeb.Server.Models.ApplicationUser" Property="UserName" Title="User Name" />
                <RadzenDataGridColumn TItem="EBidderWeb.Server.Models.ApplicationUser" Property="Email" Title="Email" />
                <AuthorizeView Roles = "Administrators, Owner">
                <RadzenDataGridColumn TItem="EBidderWeb.Server.Models.ApplicationUser" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
                    <Template Context="user">
                        <RadzenButton Authorize="Administrators, Owners" ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small"
                            Variant="Variant.Flat" Shade="Shade.Lighter" Click="@(() => DeleteClick(user))" @onclick:stopPropagation="true" />
                    </Template>
                </RadzenDataGridColumn>
                </AuthorizeView>
            </Columns>
        </RadzenDataGrid>
    </div>
</div>
@code {
        protected IEnumerable<EBidderWeb.Server.Models.ApplicationUser> users;
        protected RadzenDataGrid<EBidderWeb.Server.Models.ApplicationUser> grid0;
        protected string error;
        protected bool errorVisible;

        [Inject]
        protected SecurityService Security { get; set; }

        protected override async Task OnInitializedAsync()
        {
            users = await Security.GetUsers();
        }

        protected async Task AddClick()
        {
            await DialogService.OpenAsync<AddApplicationUser>("Add Application User");

            users = await Security.GetUsers();
        }

        protected async Task RowSelect(EBidderWeb.Server.Models.ApplicationUser user)
        {
            await DialogService.OpenAsync<EditApplicationUser>("Edit Application User", new Dictionary<string, object>{ {"Id", user.Id} });

            users = await Security.GetUsers();
        }

        protected async Task DeleteClick(EBidderWeb.Server.Models.ApplicationUser user)
        {
            try
            {
                if (await DialogService.Confirm("Are you sure you want to delete this user?") == true)
                {
                    await Security.DeleteUser($"{user.Id}");

                    users = await Security.GetUsers();
                }
            }
            catch (Exception ex)
            {
                errorVisible = true;
                error = ex.Message;
            }
        }
}
